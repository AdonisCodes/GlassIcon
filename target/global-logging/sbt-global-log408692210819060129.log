[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\USER\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\USER\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 21.0.1)
[debug]       Load.loadUnit: plugins took 154.2162ms
[debug]       Load.loadUnit: defsScala took 0.46ms
[debug] [Loading] Scanning directory C:\Users\USER\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\USER\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 31.8503 ms
[debug]           Load.resolveProject(global-plugins) took 75.2776ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\USER\.sbt\1.0\plugins, plugins: List(<none>))) took 151.0848ms
[debug] [Loading] Done in C:\Users\USER\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 194.8327ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6789ms
[debug]     Load.loadUnit(file:/C:/Users/USER/.sbt/1.0/plugins/, ...) took 367.6596ms
[debug]   Load.apply: load took 667.752ms
[debug]   Load.apply: resolveProjects took 12.1434ms
[debug]   Load.apply: finalTransforms took 86.6815ms
[debug]   Load.apply: config.delegates took 13.5491ms
[debug]   Load.apply: Def.make(settings)... took 537.9762ms
[debug]   Load.apply: structureIndex took 119.1925ms
[debug]   Load.apply: mkStreams took 3.7464ms
[info] loading global plugins from C:\Users\USER\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3067.5392ms
[debug]           Load.loadUnit: plugins took 33.9273ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3\project
[debug]             Load.loadUnit: mkEval took 8.6694ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6696 ms
[info] loading settings for project glassicon-the-glassy-identicon3-build from idea1.sbt ...
[debug]               Load.resolveProject(glassicon-the-glassy-identicon3-build) took 3.5744ms
[debug]             Load.loadTransitive: finalizeProject(Project(id glassicon-the-glassy-identicon3-build, base: C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3\project, plugins: List(<none>))) took 5.7677ms
[debug] [Loading] Done in C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3\project, returning: (glassicon-the-glassy-identicon3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2678.1328ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.0945ms
[debug]         Load.loadUnit(file:/C:/Users/USER/Desktop/projects/Project-Vidi/microservices/GlassIcon%20-%20The%20Glassy%20Identicon3/project/, ...) took 2719.1555ms
[debug]       Load.apply: load took 2720.9278ms
[debug]       Load.apply: resolveProjects took 0.1017ms
[debug]       Load.apply: finalTransforms took 12.5303ms
[debug]       Load.apply: config.delegates took 0.6564ms
[debug]       Load.apply: Def.make(settings)... took 84.8732ms
[debug]       Load.apply: structureIndex took 43.1329ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4368.704ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3
[debug]       Load.loadUnit: mkEval took 0.2646ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.8353 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 60.2778ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3, plugins: List(<none>))) took 65.4189ms
[debug] [Loading] Done in C:\Users\USER\Desktop\projects\Project-Vidi\microservices\GlassIcon - The Glassy Identicon3, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1617.8513ms
[debug]     Load.loadUnit: cleanEvalClasses took 33.0004ms
[debug]   Load.loadUnit(file:/C:/Users/USER/Desktop/projects/Project-Vidi/microservices/GlassIcon%20-%20The%20Glassy%20Identicon3/, ...) took 6020.6987ms
[debug] Load.apply: load took 6023.4297ms
[debug] Load.apply: resolveProjects took 0.217ms
[debug] Load.apply: finalTransforms took 31.7281ms
[debug] Load.apply: config.delegates took 0.4789ms
[debug] Load.apply: Def.make(settings)... took 110.1234ms
[debug] Load.apply: structureIndex took 40.5705ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to GlassIcon - The Glassy Identicon (in build file:/C:/Users/USER/Desktop/projects/Project-Vidi/microservices/GlassIcon%20-%20The%20Glassy%20Identicon3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62865 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62865, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to GlassIcon - The Glassy Identicon (in build file:/C:/Users/USER/Desktop/projects/Project-Vidi/microservices/GlassIcon%20-%20The%20Glassy%20Identicon3/)
[debug] > Exec(idea-shell, None, None)
